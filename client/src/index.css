@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 220 9% 25%;

  --border: 220 13% 91%;

  --card: 0 0% 100%;

  --card-foreground: 220 9% 25%;

  --card-border: 220 13% 88%;

  --sidebar: 220 13% 95%;

  --sidebar-foreground: 220 9% 25%;

  --sidebar-border: 220 13% 88%;

  --sidebar-primary: 220 85% 45%;

  --sidebar-primary-foreground: 0 0% 100%;

  --sidebar-accent: 220 15% 90%;

  --sidebar-accent-foreground: 220 9% 30%;

  --sidebar-ring: 220 85% 45%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 9% 25%;

  --popover-border: 220 13% 85%;

  --primary: 220 85% 45%;

  --primary-foreground: 0 0% 100%;

  --secondary: 220 13% 92%;

  --secondary-foreground: 220 9% 25%;

  --muted: 220 13% 94%;

  --muted-foreground: 220 9% 46%;

  --accent: 220 15% 93%;

  --accent-foreground: 220 9% 30%;

  --destructive: 0 72% 51%;

  --destructive-foreground: 0 0% 100%;

  --input: 220 13% 75%;
  --ring: 220 85% 45%;
  --chart-1: 220 85% 35%;
  --chart-2: 142 71% 35%;
  --chart-3: 38 92% 40%;
  --chart-4: 217 91% 50%;
  --chart-5: 260 75% 45%;

  --font-sans: Inter, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: JetBrains Mono, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 9% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(220 13% 9% / 0.10);
  --shadow-sm: 0px 1px 2px 0px hsl(220 13% 9% / 0.06), 0px 1px 3px 0px hsl(220 13% 9% / 0.10);
  --shadow: 0px 1px 3px 0px hsl(220 13% 9% / 0.10), 0px 1px 2px 0px hsl(220 13% 9% / 0.06);
  --shadow-md: 0px 4px 6px -1px hsl(220 13% 9% / 0.10), 0px 2px 4px -1px hsl(220 13% 9% / 0.06);
  --shadow-lg: 0px 10px 15px -3px hsl(220 13% 9% / 0.10), 0px 4px 6px -2px hsl(220 13% 9% / 0.05);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 9% / 0.10), 0px 10px 10px -5px hsl(220 13% 9% / 0.04);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 9% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 13% 9%;

  --foreground: 220 9% 95%;

  --border: 220 13% 18%;

  --card: 220 13% 12%;

  --card-foreground: 220 9% 95%;

  --card-border: 220 13% 20%;

  --sidebar: 220 13% 11%;

  --sidebar-foreground: 220 9% 95%;

  --sidebar-border: 220 13% 19%;

  --sidebar-primary: 220 85% 55%;

  --sidebar-primary-foreground: 220 9% 95%;

  --sidebar-accent: 220 13% 16%;

  --sidebar-accent-foreground: 220 9% 85%;

  --sidebar-ring: 220 85% 55%;

  --popover: 220 13% 14%;

  --popover-foreground: 220 9% 95%;

  --popover-border: 220 13% 22%;

  --primary: 220 85% 55%;

  --primary-foreground: 220 9% 95%;

  --secondary: 220 13% 16%;

  --secondary-foreground: 220 9% 95%;

  --muted: 220 13% 15%;

  --muted-foreground: 220 9% 70%;

  --accent: 220 13% 17%;

  --accent-foreground: 220 9% 85%;

  --destructive: 0 72% 51%;

  --destructive-foreground: 220 9% 95%;

  --input: 220 13% 25%;
  --ring: 220 85% 55%;
  --chart-1: 220 85% 65%;
  --chart-2: 142 71% 55%;
  --chart-3: 38 92% 60%;
  --chart-4: 217 91% 70%;
  --chart-5: 260 75% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(220 13% 3% / 0.15);
  --shadow-xs: 0px 1px 3px 0px hsl(220 13% 3% / 0.20);
  --shadow-sm: 0px 1px 2px 0px hsl(220 13% 3% / 0.16), 0px 1px 3px 0px hsl(220 13% 3% / 0.20);
  --shadow: 0px 1px 3px 0px hsl(220 13% 3% / 0.20), 0px 1px 2px 0px hsl(220 13% 3% / 0.16);
  --shadow-md: 0px 4px 6px -1px hsl(220 13% 3% / 0.20), 0px 2px 4px -1px hsl(220 13% 3% / 0.16);
  --shadow-lg: 0px 10px 15px -3px hsl(220 13% 3% / 0.20), 0px 4px 6px -2px hsl(220 13% 3% / 0.15);
  --shadow-xl: 0px 20px 25px -5px hsl(220 13% 3% / 0.20), 0px 10px 10px -5px hsl(220 13% 3% / 0.14);
  --shadow-2xl: 0px 25px 50px -12px hsl(220 13% 3% / 0.35);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* Custom Uppy Dashboard Styling */
.inline-uploader-wrapper {
  font-family: var(--font-sans);
}

.inline-uploader-wrapper .uppy-Dashboard-inner {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
  font-family: var(--font-sans);
}

.inline-uploader-wrapper .uppy-Dashboard-AddFiles {
  background-color: hsl(var(--background));
  border: 2px dashed hsl(var(--border));
  border-radius: var(--radius);
}

.inline-uploader-wrapper .uppy-Dashboard-AddFiles-title {
  color: hsl(var(--foreground));
  font-family: var(--font-sans);
  font-weight: 500;
  font-size: 0.875rem;
}

.inline-uploader-wrapper .uppy-Dashboard-note {
  color: hsl(var(--muted-foreground));
  font-family: var(--font-sans);
  font-size: 0.875rem;
}

.inline-uploader-wrapper .uppy-Dashboard-AddFiles-info {
  color: hsl(var(--muted-foreground));
  font-family: var(--font-sans);
}

.inline-uploader-wrapper .uppy-Dashboard-browse {
  color: hsl(var(--primary));
  font-family: var(--font-sans);
  font-weight: 500;
}

.inline-uploader-wrapper .uppy-Dashboard-browse:hover {
  color: hsl(var(--primary));
  text-decoration: underline;
}

.inline-uploader-wrapper .uppy-Dashboard-Item {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: var(--radius);
}

.inline-uploader-wrapper .uppy-Dashboard-Item-name {
  color: hsl(var(--foreground));
  font-family: var(--font-sans);
}

.inline-uploader-wrapper .uppy-Dashboard-Item-status {
  color: hsl(var(--muted-foreground));
  font-family: var(--font-sans);
}

.inline-uploader-wrapper .uppy-ProgressBar {
  background-color: hsl(var(--muted));
}

.inline-uploader-wrapper .uppy-ProgressBar-inner {
  background-color: hsl(var(--primary));
}

.inline-uploader-wrapper .uppy-StatusBar {
  background-color: hsl(var(--card));
  border-top: 1px solid hsl(var(--border));
  font-family: var(--font-sans);
  color: hsl(var(--foreground));
}

.inline-uploader-wrapper .uppy-StatusBar-status {
  color: hsl(var(--foreground));
  font-family: var(--font-sans);
}

.inline-uploader-wrapper .uppy-StatusBar-progress {
  background-color: hsl(var(--primary));
}

.inline-uploader-wrapper .uppy-Dashboard-Item-action--remove {
  color: hsl(var(--muted-foreground));
}

.inline-uploader-wrapper .uppy-Dashboard-Item-action--remove:hover {
  color: hsl(var(--destructive));
}

/* Print Styles */
@media print {
  @page {
    margin: 0.5in;
    size: A4;
  }
  
  /* Hide overlay */
  [data-radix-dialog-overlay] {
    display: none !important;
  }
  
  /* Reset dialog positioning */
  [data-radix-portal],
  [data-radix-dialog-content] {
    position: static !important;
    transform: none !important;
    inset: auto !important;
    max-height: none !important;
    max-width: 100% !important;
    display: block !important;
    box-shadow: none !important;
    border: none !important;
  }
  
  /* Allow dialog content to expand properly */
  .max-h-\[90vh\] {
    max-height: none !important;
  }
  
  .overflow-y-auto {
    overflow: visible !important;
  }
  
  /* Hide buttons */
  button {
    display: none !important;
  }
  
  /* Black and white conversion */
  .bg-blue-50\/50, .bg-blue-50,
  .bg-green-50\/50, .bg-green-50,
  .bg-orange-50\/50, .bg-orange-50,
  .bg-purple-50\/50, .bg-purple-50,
  .bg-white,
  [class*="bg-blue-"], [class*="bg-green-"],
  [class*="bg-orange-"], [class*="bg-purple-"] {
    background-color: white !important;
    color: black !important;
  }
  
  /* Ensure borders are black */
  [class*="border-blue-"], [class*="border-green-"],
  [class*="border-orange-"], [class*="border-purple-"],
  .border {
    border-color: #000 !important;
    border-width: 1px !important;
  }
  
  /* Remove shadows */
  * {
    box-shadow: none !important;
    text-shadow: none !important;
  }
  
  /* Black text */
  [class*="text-blue-"], [class*="text-green-"],
  [class*="text-orange-"], [class*="text-purple-"],
  [class*="text-muted-"],
  p, span, div, h1, h2, h3, h4, h5, h6 {
    color: black !important;
  }
  
  /* Black icons */
  svg {
    color: black !important;
    fill: currentColor !important;
  }
  
  /* Grid to block */
  .grid {
    display: block !important;
  }
  
  .grid > * {
    page-break-inside: avoid;
    margin-bottom: 0.5rem;
  }
  
  /* Badge styling */
  [class*="Badge"] {
    background: transparent !important;
    border: 1px solid black !important;
    padding: 2px 6px !important;
  }
}

/* Quill Editor Dark Mode Styles */
.dark .ql-toolbar.ql-snow {
  background-color: hsl(var(--card));
  border-color: hsl(var(--border));
}

.dark .ql-container.ql-snow {
  background-color: hsl(var(--background));
  border-color: hsl(var(--border));
  color: hsl(var(--foreground));
}

.dark .ql-editor {
  color: hsl(var(--foreground));
}

.dark .ql-editor.ql-blank::before {
  color: hsl(var(--muted-foreground));
}

.dark .ql-snow .ql-stroke {
  stroke: hsl(var(--foreground));
}

.dark .ql-snow .ql-fill {
  fill: hsl(var(--foreground));
}

.dark .ql-snow .ql-picker-label {
  color: hsl(var(--foreground));
}

.dark .ql-snow .ql-picker-options {
  background-color: hsl(var(--popover));
  border-color: hsl(var(--border));
}

.dark .ql-snow .ql-picker-item {
  color: hsl(var(--foreground));
}

.dark .ql-snow .ql-picker-item:hover {
  background-color: hsl(var(--accent));
}

.dark .ql-snow .ql-picker-item.ql-selected {
  color: hsl(var(--primary));
}

.dark .ql-toolbar.ql-snow .ql-picker-label:hover,
.dark .ql-toolbar.ql-snow .ql-picker-label.ql-active {
  color: hsl(var(--primary));
}

.dark .ql-toolbar.ql-snow .ql-picker-label:hover .ql-stroke,
.dark .ql-toolbar.ql-snow .ql-picker-label.ql-active .ql-stroke {
  stroke: hsl(var(--primary));
}

.dark .ql-toolbar.ql-snow button:hover,
.dark .ql-toolbar.ql-snow button.ql-active {
  color: hsl(var(--primary));
}

.dark .ql-toolbar.ql-snow button:hover .ql-stroke,
.dark .ql-toolbar.ql-snow button.ql-active .ql-stroke {
  stroke: hsl(var(--primary));
}

.dark .ql-toolbar.ql-snow button:hover .ql-fill,
.dark .ql-toolbar.ql-snow button.ql-active .ql-fill {
  fill: hsl(var(--primary));
}

.dark .ql-snow a {
  color: hsl(var(--primary));
}